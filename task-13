*Task13*
Create a vpc with 9 subnets(6 private and 3 public). 3 types application, database and loadbalncer

### main.tf ###

resource "aws_vpc" "my_vpc" {
  cidr_block = var.vpc_cidr
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = var.vpc_name
  }
}

resource "aws_subnet" "public" {
  count = length(var.public_lb_subnets)
  
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = var.public_subnets[count.index]
  map_public_ip_on_launch = true
  availability_zone       = element(var.availability_zones, count.index)

  tags = {
    Name = "Public-lb-Subnet-${count.index + 1}"
  }
}

resource "aws_subnet" "private_app" {
  count = length(var.private_app_subnets)
  
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = var.private_app_subnets[count.index]
  availability_zone = element(var.availability_zones, count.index)

  tags = {
    Name = "Private-App-Subnet-${count.index + 1}"
  }
}

resource "aws_subnet" "private_db" {
  count = length(var.private_db_subnets)
  
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = var.private_db_subnets[count.index]
  availability_zone = element(var.availability_zones, count.index)

  tags = {
    Name = "Private-DB-Subnet-${count.index + 1}"
  }
}

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.my_vpc.id

  tags = {
    Name = "My-IGW"
  }
}

resource "aws_route_table" "public_rt" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }
  tags = {
    Name = "route-table"
  }
}

resource "aws_route_table_association" "public_assoc" {
  count = length(var.public_subnets)

  subnet_id      = aws_subnet.public[count.index].id
  route_table_id = aws_route_table.public_rt.id
}

# Security Groups
resource "aws_security_group" "alb_sg" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Load Balancer Setup
resource "aws_lb" "app_lb" {
  name               = "app-load-balancer"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.alb_sg.id]
  subnets           = aws_subnet.public[*].id

  enable_deletion_protection = false

  tags = {
    Name = "AppLoadBalancer"
  }
}

### variables.tf ###
variable "aws_region" {}
variable "vpc_cidr" {}
variable "vpc_name" {}
variable "public_lb_subnets" {}
  
variable "private_app_subnets" {}
  
variable "private_db_subnets" {}
 
variable "availability_zones" {}
### vars.tfvars ###
aws_region = "us-east-1"
vpc_cidr   = "10.0.0.0/16"
vpc_name   = "MyVPC"

public_lb_subnets = [
  "10.0.1.0/24",
  "10.0.2.0/24",
  "10.0.3.0/24"
]

private_app_subnets = [
  "10.0.4.0/24",
  "10.0.5.0/24",
  "10.0.6.0/24"
]

private_db_subnets = [
  "10.0.7.0/24",
  "10.0.8.0/24",
  "10.0.9.0/24"
]

availability_zones = [
  "ap-southeast-1a",
  "ap-southeast-1b",
  "ap-southeast-1c"
]


