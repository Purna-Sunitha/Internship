## main.tf ##

resource "aws_vpc" "my-vpc" {
  cidr_block = var.vpc_cidr
  tags = {
    Name = var.vpc_name
  }
}

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.my-vpc.id

  tags = {
    Name = var.igw_name
  }
}

resource "aws_route_table" "public_rt" {
  vpc_id = aws_vpc.my-vpc.id

  route {
    cidr_block = var.pub_rt_igw_access_cidr
    gateway_id = aws_internet_gateway.igw.id
  }

  tags = {
    Name = var.rt_name
  }
}

resource "aws_subnet" "subnets" {
  for_each = { for idx, subnet in var.subnets : subnet.name => subnet }

  vpc_id                  = aws_vpc.my-vpc.id
  cidr_block              = each.value.cidr
  availability_zone       = each.value.az
  map_public_ip_on_launch = each.value.type == "loadbalancer" ? true : false

  tags = {
    Name = each.value.name
  }
}

resource "aws_route_table_association" "public_subnet_association" {
  for_each = { for subnet in var.subnets : subnet.name => subnet if subnet.type == "loadbalancer" }
  subnet_id      = aws_subnet.subnets[each.key].id
  route_table_id = aws_route_table.public_rt.id
}

resource "aws_route_table" "private_rt" {
  vpc_id = aws_vpc.my-vpc.id

  tags = {
    Name = var.pri_rt
  }
}

resource "aws_route_table_association" "private_subnet_association" {
  for_each = { for subnet in var.subnets : subnet.name => subnet if subnet.type == "application" || subnet.type == "database" }

  subnet_id      = aws_subnet.subnets[each.key].id
  route_table_id = aws_route_table.private_rt.id
}
resource "aws_lb" "main" {
  name               = "my-load-balancer"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.lb_sg.id]
  subnets            = [for s in aws_subnet.subnets : s.id if s.map_public_ip_on_launch]

  tags = {
    Name = var.lb_name
  }
}

resource "aws_security_group" "lb_sg" {
  vpc_id = aws_vpc.my-vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = var.sg_name
  }
}


### variables.tf ###

variable "vpc_cidr" {}
variable "vpc_name" {}
variable "igw_name" {}
variable "rt_name"  {}
variable "pub_rt_igw_access_cidr" {}
variable "pri_rt" {}
variable "lb_name" {}
variable "sg_name" {}

variable "subnets" {
  description = "List of subnets with type information"
  type = list(object({
    name = string
    cidr = string
    type = string # application, database, loadbalancer
    az   = string
  }))
}





### vars.tfvars ###

vpc_cidr = "10.0.0.0/16"
vpc_name = "my-vpc"
igw_name ="my-igw"
rt_name  = "pub-route-table"
pub_rt_igw_access_cidr = "0.0.0.0/0"
pri_rt = "priv-route-table"
lb_name = "my-alb"
sg_name = "alb-sg"
subnets = [
  { name = "app-subnet-1", cidr = "10.0.1.0/24", type = "application", az = "ap-southeast-1a" },
  { name = "app-subnet-2", cidr = "10.0.2.0/24", type = "application", az = "ap-southeast-1b" },
  { name = "app-subnet-3", cidr = "10.0.3.0/24", type = "application", az = "ap-southeast-1c" },
  { name = "db-subnet-1", cidr = "10.0.4.0/24", type = "database", az = "ap-southeast-1a" },
  { name = "db-subnet-2", cidr = "10.0.5.0/24", type = "database", az = "ap-southeast-1b" },
  { name = "db-subnet-3", cidr = "10.0.6.0/24", type = "database", az = "ap-southeast-1c" },
  { name = "lb-subnet-1", cidr = "10.0.7.0/24", type = "loadbalancer", az = "ap-southeast-1a" },
  { name = "lb-subnet-2", cidr = "10.0.8.0/24", type = "loadbalancer", az = "ap-southeast-1b" },
  { name = "lb-subnet-3", cidr = "10.0.9.0/24", type = "loadbalancer", az = "ap-southeast-1c" }
]
